#!/bin/bash

####################################
# Copyright (c) 2016 - 2017 YMC AG #
###########################################################################
# This program is free software; you can redistribute it and/or modify it #
# under the terms of the GNU General Public License as published by the   #
# Free Software Foundation; either version 2 of the License, or (at your  #
# option) any later version.                                              #
# A copy of the GNU General Public License version 2 is in file GPL-2.    #
###########################################################################

# WARNING: This is intended to be run on Mac OSX, only!

trap _stop SIGTERM SIGINT SIGKILL

_stop()
{
  if [ -n "$PID_OF_DOCKER_SYNC_READ_LOOP" ]; then
    echo "I: Killing docker_sync_logread_loop..." 1>&2
    kill -TERM "$PID_OF_DOCKER_SYNC_READ_LOOP" 2>/dev/null
    sleep 1
  fi


  if [ -n "$DOCKER_SYNC_SCREEN_PID" ]; then

    local DOCKER_SYNC_PID= $(pgrep -P $(pgrep -P $DOCKER_SYNC_SCREEN_PID) | sort -n | head -1)
    if [ -n "$DOCKER_SYNC_PID" ]; then
      echo "I: Sending SIGINT to docker-sync" 1>&2
      kill -SIGINT $DOCKER_SYNC_PID
      sleep 3
    else
      echo "I: Not sending SIGINT to docker-sync, as it is already stopped" 1>&2
    fi
  fi

  if [ -n "$COMPOSE_PROJECT_NAME" ]; then
    echo "I: Removing sync screen docker_sync_logread_loop..." 1>&2
    screen -S docker-sync.$COMPOSE_PROJECT_NAME -X stuff "^c\n"
    sleep 1
    screen -S docker-sync.$COMPOSE_PROJECT_NAME -X quit
  fi

  exit 0
}

# "Normalize" the name, just like docker-compose does it - see:
#  https://github.com/docker/compose/blob/1.14.0/compose/cli/command.py#L108
COMPOSE_PROJECT_NAME=$(echo "$1" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]//g')
if [ -z "$COMPOSE_PROJECT_NAME" ]; then
  echo "E: Project ID not given as first parameter of this script" 1>&2
  exit 1
fi

if [ -e "/tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status" ]; then
  rm -f /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status
fi

echo "UNKNOWN" > /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status

# Open a new screen for docker-sync (if needed)
if [ $(screen -ls docker-sync.$COMPOSE_PROJECT_NAME | grep -c "\.docker-sync.$COMPOSE_PROJECT_NAME[[:space:]]") -le 0 ]; then
  echo "I: Opening a new screen docker-sync.$COMPOSE_PROJECT_NAME" 1>&2
  screen -s /bin/bash -dmS docker-sync.$COMPOSE_PROJECT_NAME && sleep 1
fi

# Terminate a potentially running docker-sync in that screen
screen -S docker-sync.$COMPOSE_PROJECT_NAME -X stuff "^c\n"

# Get the pid of our docker-sync screen
DOCKER_SYNC_SCREEN_PID=$(echo $(screen -ls docker-sync.$COMPOSE_PROJECT_NAME | grep "\.docker-sync.$COMPOSE_PROJECT_NAME[[:space:]]" | cut -d '.' -f 1))

# Wait till docker-sync has been shutdown
echo "Waiting for a possibly old docker-sync session to shutdown..." 1>&2
loop_protection=120
while [ $loop_protection -ge 0 ]
do
  let loop_protection--
  if [ $(pstree -p $DOCKER_SYNC_SCREEN_PID | grep -c -F 'docker-sync start' ) -eq 0 ]; then
    break
  else
    sleep 1
  fi
  echo -e -n "Waiting (${loop_protection}s)...                         \r"
done
echo "...OKAY                                                          "


# Get rid of a possibly existing old pipe
if [ -e /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.pipe ]; then
  echo "W: Expected '/tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.pipe' not to be present - DELETED IT!" 1>&2
  rm -f /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.pipe
fi


docker_sync_logread_loop()
{
  socat PIPE:/tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.pipe STDOUT | while read line
  do
    if [ $(echo "$line" | grep -c -F "Looking for changes") -ne 0 ]; then
      echo "SYNCED" > /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status
    elif [ $(echo "$line" | grep -c "command.*sudo") -ne 0 ]; then
      sleep 5
      screen -S docker-sync.$COMPOSE_PROJECT_NAME -X stuff "\n"
      sleep 5
    elif [ $(echo "$line" | grep -c -F "Password:") -ne 0 ]; then
      echo "ASKPASS" > /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status
    fi
  done
}


# Run the logfile pipe reader in background
docker_sync_logread_loop &
PID_OF_DOCKER_SYNC_READ_LOOP=$!


# Enter our watchdog loop
while true
do
  sleep 1
  if [ $(pstree $PID_OF_DOCKER_SYNC_READ_LOOP | grep -c -F 'socat') -ne 1 ]; then
    echo "W: docker_sync_logread_loop died - restarting it..." 1>&2
    docker_sync_logread_loop &
    PID_OF_DOCKER_SYNC_READ_LOOP=$!
  fi

  if [ $(screen -ls docker-sync.$COMPOSE_PROJECT_NAME | grep -c "\.docker-sync.$COMPOSE_PROJECT_NAME[[:space:]]") -le 0 ]; then
    echo "UNKNOWN" > /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status
    echo "W: Docker sync screen died - opening a new one" 1>&2
    screen -dmS docker-sync.$COMPOSE_PROJECT_NAME && sleep 1
    DOCKER_SYNC_SCREEN_PID=$(echo $(screen -ls docker-sync.$COMPOSE_PROJECT_NAME | grep "\.docker-sync.$COMPOSE_PROJECT_NAME[[:space:]]" | cut -d '.' -f 1))
  fi

  if [ $(pstree -p $DOCKER_SYNC_SCREEN_PID | grep -c -F 'docker-sync start' ) -eq 0 ]; then
    echo "DEAD" > /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status
    echo "W: docker_sync_died - restarting it..." 1>&2
    sleep 1
    screen -S docker-sync.$COMPOSE_PROJECT_NAME -X stuff "export DOCKER_SYNC_SKIP_UPDATE=1\n"
    screen -S docker-sync.$COMPOSE_PROJECT_NAME -X stuff "export DOCKER_SYNC_SKIP_UPGRADE=1\n"
    screen -S docker-sync.$COMPOSE_PROJECT_NAME -X stuff "script -F /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.pipe docker-sync start --foreground 2>&1\n"
    echo "STARTING" > /tmp/modofu-$COMPOSE_PROJECT_NAME-docker-sync.status
  fi
done

